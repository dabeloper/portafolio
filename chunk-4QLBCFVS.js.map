{"version":3,"sources":["node_modules/@firebase/util/dist/index.esm2017.js","node_modules/@firebase/logger/dist/esm/index.esm2017.js","node_modules/@firebase/component/dist/esm/index.esm2017.js","node_modules/idb/build/wrap-idb-value.js","node_modules/idb/build/index.js","node_modules/@firebase/app/dist/esm/index.esm2017.js","node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js","node_modules/@firebase/installations/node_modules/idb/build/index.js","node_modules/@firebase/installations/dist/esm/index.esm2017.js","node_modules/@firebase/performance/dist/esm/index.esm2017.js"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\nconst CONSTANTS = {\n  /**\r\n   * @define {boolean} Whether this is the client Node.js SDK.\r\n   */\n  NODE_CLIENT: false,\n  /**\r\n   * @define {boolean} Whether this is the Admin Node.js SDK.\r\n   */\n  NODE_ADMIN: false,\n  /**\r\n   * Firebase SDK Version\r\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\nconst assert = function (assertion, message) {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\nconst assertionError = function (message) {\n  return new Error('Firebase Database (' + CONSTANTS.SDK_VERSION + ') INTERNAL ASSERT FAILED: ' + message);\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst stringToByteArray$1 = function (str) {\n  // TODO(user): Use native implementations if/when available\n  const out = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = c >> 6 | 192;\n      out[p++] = c & 63 | 128;\n    } else if ((c & 0xfc00) === 0xd800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = c >> 18 | 240;\n      out[p++] = c >> 12 & 63 | 128;\n      out[p++] = c >> 6 & 63 | 128;\n      out[p++] = c & 63 | 128;\n    } else {\n      out[p++] = c >> 12 | 224;\n      out[p++] = c >> 6 & 63 | 128;\n      out[p++] = c & 63 | 128;\n    }\n  }\n  return out;\n};\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\nconst byteArrayToString = function (bytes) {\n  // TODO(user): Use native implementations if/when available\n  const out = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n    }\n  }\n  return out.join('');\n};\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nconst base64 = {\n  /**\r\n   * Maps bytes to characters.\r\n   */\n  byteToCharMap_: null,\n  /**\r\n   * Maps characters to bytes.\r\n   */\n  charToByteMap_: null,\n  /**\r\n   * Maps bytes to websafe characters.\r\n   * @private\r\n   */\n  byteToCharMapWebSafe_: null,\n  /**\r\n   * Maps websafe characters to bytes.\r\n   * @private\r\n   */\n  charToByteMapWebSafe_: null,\n  /**\r\n   * Our default alphabet, shared between\r\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n   */\n  ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n  /**\r\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n  /**\r\n   * Our websafe alphabet.\r\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n  /**\r\n   * Whether this browser supports the atob and btoa functions. This extension\r\n   * started at Mozilla but is now implemented by many browsers. We use the\r\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n   * but still allowing the standard per-browser compilations.\r\n   *\r\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n  /**\r\n   * Base64-encode an array of bytes.\r\n   *\r\n   * @param input An array of bytes (numbers with\r\n   *     value in [0, 255]) to encode.\r\n   * @param webSafe Boolean indicating we should use the\r\n   *     alternative alphabet.\r\n   * @return The base64 encoded string.\r\n   */\n  encodeByteArray(input, webSafe) {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n    this.init_();\n    const byteToCharMap = webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;\n    const output = [];\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n      const outByte1 = byte1 >> 2;\n      const outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;\n      let outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;\n      let outByte4 = byte3 & 0x3f;\n      if (!haveByte3) {\n        outByte4 = 64;\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n      output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\n    }\n    return output.join('');\n  },\n  /**\r\n   * Base64-encode a string.\r\n   *\r\n   * @param input A string to encode.\r\n   * @param webSafe If true, we should use the\r\n   *     alternative alphabet.\r\n   * @return The base64 encoded string.\r\n   */\n  encodeString(input, webSafe) {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray$1(input), webSafe);\n  },\n  /**\r\n   * Base64-decode a string.\r\n   *\r\n   * @param input to decode.\r\n   * @param webSafe True if we should use the\r\n   *     alternative alphabet.\r\n   * @return string representing the decoded value.\r\n   */\n  decodeString(input, webSafe) {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n  /**\r\n   * Base64-decode a string.\r\n   *\r\n   * In base-64 decoding, groups of four characters are converted into three\r\n   * bytes.  If the encoder did not apply padding, the input length may not\r\n   * be a multiple of 4.\r\n   *\r\n   * In this case, the last group will have fewer than 4 characters, and\r\n   * padding will be inferred.  If the group has one or two characters, it decodes\r\n   * to one byte.  If the group has three characters, it decodes to two bytes.\r\n   *\r\n   * @param input Input to decode.\r\n   * @param webSafe True if we should use the web-safe alphabet.\r\n   * @return bytes representing the decoded value.\r\n   */\n  decodeStringToByteArray(input, webSafe) {\n    this.init_();\n    const charToByteMap = webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;\n    const output = [];\n    for (let i = 0; i < input.length;) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n      const outByte1 = byte1 << 2 | byte2 >> 4;\n      output.push(outByte1);\n      if (byte3 !== 64) {\n        const outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;\n        output.push(outByte2);\n        if (byte4 !== 64) {\n          const outByte3 = byte3 << 6 & 0xc0 | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n    return output;\n  },\n  /**\r\n   * Lazy static initialization function. Called before\r\n   * accessing any of the static map variables.\r\n   * @private\r\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n/**\r\n * An error encountered while decoding base64 string.\r\n */\nclass DecodeBase64StringError extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = 'DecodeBase64StringError';\n  }\n}\n/**\r\n * URL-safe base64 encoding\r\n */\nconst base64Encode = function (str) {\n  const utf8Bytes = stringToByteArray$1(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\nconst base64urlEncodeWithoutPadding = function (str) {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\nconst base64Decode = function (str) {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\nfunction deepCopy(value) {\n  return deepExtend(undefined, value);\n}\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\nfunction deepExtend(target, source) {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source;\n      return new Date(dateValue.getTime());\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    target[prop] = deepExtend(target[prop], source[prop]);\n  }\n  return target;\n}\nfunction isValidKey(key) {\n  return key !== '__proto__';\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\nfunction getGlobal() {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\nconst getDefaultsFromEnvVariable = () => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\nconst getDefaultsFromCookie = () => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\nconst getDefaults = () => {\n  try {\n    return getDefaultsFromGlobal() || getDefaultsFromEnvVariable() || getDefaultsFromCookie();\n  } catch (e) {\n    /**\r\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n     * to any environment case we have not accounted for. Log to\r\n     * info instead of swallowing so we can find these unknown cases\r\n     * and add paths for them if needed.\r\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */\nconst getDefaultEmulatorHost = productName => {\n  var _a, _b;\n  return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName];\n};\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */\nconst getDefaultEmulatorHostnameAndPort = productName => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\nconst getDefaultAppConfig = () => {\n  var _a;\n  return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config;\n};\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */\nconst getExperimentalSetting = name => {\n  var _a;\n  return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`];\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nclass Deferred {\n  constructor() {\n    this.reject = () => {};\n    this.resolve = () => {};\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n  /**\r\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n   */\n  wrapCallback(callback) {\n    return (error, value) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction createMockUserToken(token, projectId) {\n  if (token.uid) {\n    throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n  const payload = Object.assign({\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    }\n  }, token);\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [base64urlEncodeWithoutPadding(JSON.stringify(header)), base64urlEncodeWithoutPadding(JSON.stringify(payload)), signature].join('.');\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\nfunction getUA() {\n  if (typeof navigator !== 'undefined' && typeof navigator['userAgent'] === 'string') {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\nfunction isMobileCordova() {\n  return typeof window !== 'undefined' &&\n  // @ts-ignore Setting up an broadly applicable index signature for Window\n  // just to deal with this case would probably be a bad idea.\n  !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA());\n}\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nfunction isNode() {\n  var _a;\n  const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n  try {\n    return Object.prototype.toString.call(global.process) === '[object process]';\n  } catch (e) {\n    return false;\n  }\n}\n/**\r\n * Detect Browser Environment\r\n */\nfunction isBrowser() {\n  return typeof self === 'object' && self.self === self;\n}\nfunction isBrowserExtension() {\n  const runtime = typeof chrome === 'object' ? chrome.runtime : typeof browser === 'object' ? browser.runtime : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\nfunction isReactNative() {\n  return typeof navigator === 'object' && navigator['product'] === 'ReactNative';\n}\n/** Detects Electron apps. */\nfunction isElectron() {\n  return getUA().indexOf('Electron/') >= 0;\n}\n/** Detects Internet Explorer. */\nfunction isIE() {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n/** Detects Universal Windows Platform apps. */\nfunction isUWP() {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\nfunction isNodeSdk() {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n/** Returns true if we are running in Safari. */\nfunction isSafari() {\n  return !isNode() && navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');\n}\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\nfunction isIndexedDBAvailable() {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\nfunction validateIndexedDBOpenable() {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist = true;\n      const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n      request.onerror = () => {\n        var _a;\n        reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\nfunction areCookiesEnabled() {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\nconst ERROR_NAME = 'FirebaseError';\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nclass FirebaseError extends Error {\n  constructor( /** The error code for this error. */\n  code, message, /** Custom data for this error. */\n  customData) {\n    super(message);\n    this.code = code;\n    this.customData = customData;\n    /** The custom name for all FirebaseErrors. */\n    this.name = ERROR_NAME;\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\nclass ErrorFactory {\n  constructor(service, serviceName, errors) {\n    this.service = service;\n    this.serviceName = serviceName;\n    this.errors = errors;\n  }\n  create(code, ...data) {\n    const customData = data[0] || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n    return error;\n  }\n}\nfunction replaceTemplate(template, data) {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\nfunction jsonEval(str) {\n  return JSON.parse(str);\n}\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\nfunction stringify(data) {\n  return JSON.stringify(data);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\nconst decode = function (token) {\n  let header = {},\n    claims = {},\n    data = {},\n    signature = '';\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '');\n    claims = jsonEval(base64Decode(parts[1]) || '');\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\nconst isValidTimestamp = function (token) {\n  const claims = decode(token).claims;\n  const now = Math.floor(new Date().getTime() / 1000);\n  let validSince = 0,\n    validUntil = 0;\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'];\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'];\n    }\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'];\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n  return !!now && !!validSince && !!validUntil && now >= validSince && now <= validUntil;\n};\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\nconst issuedAtTime = function (token) {\n  const claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'];\n  }\n  return null;\n};\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\nconst isValidFormat = function (token) {\n  const decoded = decode(token),\n    claims = decoded.claims;\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\nconst isAdmin = function (token) {\n  const claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction contains(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction safeGet(obj, key) {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\nfunction isEmpty(obj) {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction map(obj, fn, contextObj) {\n  const res = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res;\n}\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n    const aProp = a[k];\n    const bProp = b[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isObject(thing) {\n  return thing !== null && typeof thing === 'object';\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\n  const deferredPromise = new Deferred();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\nfunction querystring(querystringParams) {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\nfunction querystringDecode(querystring) {\n  const obj = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\nfunction extractQuerystring(url) {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\nclass Sha1 {\n  constructor() {\n    /**\r\n     * Holds the previous values of accumulated variables a-e in the compress_\r\n     * function.\r\n     * @private\r\n     */\n    this.chain_ = [];\n    /**\r\n     * A buffer holding the partially computed hash result.\r\n     * @private\r\n     */\n    this.buf_ = [];\n    /**\r\n     * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n     * as the message schedule in the docs.\r\n     * @private\r\n     */\n    this.W_ = [];\n    /**\r\n     * Contains data needed to pad messages less than 64 bytes.\r\n     * @private\r\n     */\n    this.pad_ = [];\n    /**\r\n     * @private {number}\r\n     */\n    this.inbuf_ = 0;\n    /**\r\n     * @private {number}\r\n     */\n    this.total_ = 0;\n    this.blockSize = 512 / 8;\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n    this.reset();\n  }\n  reset() {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n  /**\r\n   * Internal compress helper function.\r\n   * @param buf Block to compress.\r\n   * @param offset Offset of the block in the buffer.\r\n   * @private\r\n   */\n  compress_(buf, offset) {\n    if (!offset) {\n      offset = 0;\n    }\n    const W = this.W_;\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] = buf.charCodeAt(offset) << 24 | buf.charCodeAt(offset + 1) << 16 | buf.charCodeAt(offset + 2) << 8 | buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] = buf[offset] << 24 | buf[offset + 1] << 16 | buf[offset + 2] << 8 | buf[offset + 3];\n        offset += 4;\n      }\n    }\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = (t << 1 | t >>> 31) & 0xffffffff;\n    }\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ b & (c ^ d);\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = b & c | d & (b | c);\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n      const t = (a << 5 | a >>> 27) + f + e + k + W[i] & 0xffffffff;\n      e = d;\n      d = c;\n      c = (b << 30 | b >>> 2) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n    this.chain_[0] = this.chain_[0] + a & 0xffffffff;\n    this.chain_[1] = this.chain_[1] + b & 0xffffffff;\n    this.chain_[2] = this.chain_[2] + c & 0xffffffff;\n    this.chain_[3] = this.chain_[3] + d & 0xffffffff;\n    this.chain_[4] = this.chain_[4] + e & 0xffffffff;\n  }\n  update(bytes, length) {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n    if (length === undefined) {\n      length = bytes.length;\n    }\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n  /** @override */\n  digest() {\n    const digest = [];\n    let totalBits = this.total_ * 8;\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = this.chain_[i] >> j & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\nfunction createSubscribe(executor, onNoObservers) {\n  const proxy = new ObserverProxy(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\nclass ObserverProxy {\n  /**\r\n   * @param executor Function which can make calls to a single Observer\r\n   *     as a proxy.\r\n   * @param onNoObservers Callback when count of Observers goes to zero.\r\n   */\n  constructor(executor, onNoObservers) {\n    this.observers = [];\n    this.unsubscribes = [];\n    this.observerCount = 0;\n    // Micro-task scheduling by calling task.then().\n    this.task = Promise.resolve();\n    this.finalized = false;\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task.then(() => {\n      executor(this);\n    }).catch(e => {\n      this.error(e);\n    });\n  }\n  next(value) {\n    this.forEachObserver(observer => {\n      observer.next(value);\n    });\n  }\n  error(error) {\n    this.forEachObserver(observer => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n  complete() {\n    this.forEachObserver(observer => {\n      observer.complete();\n    });\n    this.close();\n  }\n  /**\r\n   * Subscribe function that can be used to add an Observer to the fan-out list.\r\n   *\r\n   * - We require that no event is sent to a subscriber sychronously to their\r\n   *   call to subscribe().\r\n   */\n  subscribe(nextOrObserver, error, complete) {\n    let observer;\n    if (nextOrObserver === undefined && error === undefined && complete === undefined) {\n      throw new Error('Missing Observer.');\n    }\n    // Assemble an Observer object when passed as callback functions.\n    if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\n      observer = nextOrObserver;\n    } else {\n      observer = {\n        next: nextOrObserver,\n        error,\n        complete\n      };\n    }\n    if (observer.next === undefined) {\n      observer.next = noop;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop;\n    }\n    const unsub = this.unsubscribeOne.bind(this, this.observers.length);\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n    this.observers.push(observer);\n    return unsub;\n  }\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  unsubscribeOne(i) {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n    delete this.observers[i];\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n  forEachObserver(fn) {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  sendOne(i, fn) {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n  close(err) {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction async(fn, onError) {\n  return (...args) => {\n    Promise.resolve(true).then(() => {\n      fn(...args);\n    }).catch(error => {\n      if (onError) {\n        onError(error);\n      }\n    });\n  };\n}\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\nfunction implementsAnyMethods(obj, methods) {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n  return false;\n}\nfunction noop() {\n  // do nothing\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error = fnName + ' failed: Was called with ' + argCount + (argCount === 1 ? ' argument.' : ' arguments.') + ' Expects ' + argError + '.';\n    throw new Error(error);\n  }\n};\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\nfunction errorPrefix(fnName, argName) {\n  return `${fnName} failed: ${argName} argument `;\n}\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\nfunction validateNamespace(fnName, namespace, optional) {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\n  }\n}\nfunction validateCallback(fnName, argumentName,\n// eslint-disable-next-line @typescript-eslint/ban-types\ncallback, optional) {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\n  }\n}\nfunction validateContextObject(fnName, argumentName, context, optional) {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\nconst stringToByteArray = function (str) {\n  const out = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = c >> 6 | 192;\n      out[p++] = c & 63 | 128;\n    } else if (c < 65536) {\n      out[p++] = c >> 12 | 224;\n      out[p++] = c >> 6 & 63 | 128;\n      out[p++] = c & 63 | 128;\n    } else {\n      out[p++] = c >> 18 | 240;\n      out[p++] = c >> 12 & 63 | 128;\n      out[p++] = c >> 6 & 63 | 128;\n      out[p++] = c & 63 | 128;\n    }\n  }\n  return out;\n};\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\nconst stringLength = function (str) {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\nconst uuidv4 = function () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\nconst RANDOM_FACTOR = 0.5;\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n  // A fraction of the backoff value to add/subtract.\n  // Deviation: changes multiplication order to improve readability.\n  RANDOM_FACTOR * currBaseValue * (\n  // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n  // if we add or subtract.\n  Math.random() - 0.5) * 2);\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Provide English ordinal letters after a number\r\n */\nfunction ordinal(i) {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\nfunction indicator(i) {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getModularInstance(service) {\n  if (service && service._delegate) {\n    return service._delegate;\n  } else {\n    return service;\n  }\n}\nexport { CONSTANTS, DecodeBase64StringError, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getDefaultAppConfig, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaults, getExperimentalSetting, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, uuidv4, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A container for all of the Logger instances\r\n */\nconst instances = [];\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\nvar LogLevel = /*#__PURE__*/function (LogLevel) {\n  LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n  LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n  LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n  LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n  LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n  LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n  return LogLevel;\n}(LogLevel || {});\nconst levelStringToEnum = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n/**\r\n * The default log level\r\n */\nconst defaultLogLevel = LogLevel.INFO;\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\nconst defaultLogHandler = (instance, logType, ...args) => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType];\n  if (method) {\n    console[method](`[${now}]  ${instance.name}:`, ...args);\n  } else {\n    throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\n  }\n};\nclass Logger {\n  /**\r\n   * Gives you an instance of a Logger to capture messages according to\r\n   * Firebase's logging scheme.\r\n   *\r\n   * @param name The name that the logs will be associated with\r\n   */\n  constructor(name) {\n    this.name = name;\n    /**\r\n     * The log level of the given Logger instance.\r\n     */\n    this._logLevel = defaultLogLevel;\n    /**\r\n     * The main (internal) log handler for the Logger instance.\r\n     * Can be set to a new function in internal package code but not by user.\r\n     */\n    this._logHandler = defaultLogHandler;\n    /**\r\n     * The optional, additional, user-defined log handler for the Logger instance.\r\n     */\n    this._userLogHandler = null;\n    /**\r\n     * Capture the current instance for later use\r\n     */\n    instances.push(this);\n  }\n  get logLevel() {\n    return this._logLevel;\n  }\n  set logLevel(val) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val) {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n  get logHandler() {\n    return this._logHandler;\n  }\n  set logHandler(val) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n  get userLogHandler() {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val) {\n    this._userLogHandler = val;\n  }\n  /**\r\n   * The functions below are all based on the `console` interface\r\n   */\n  debug(...args) {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args) {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args) {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args) {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args) {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\nfunction setLogLevel(level) {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\nfunction setUserLogHandler(logCallback, options) {\n  for (const instance of instances) {\n    let customLogLevel = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (instance, level, ...args) => {\n        const message = args.map(arg => {\n          if (arg == null) {\n            return null;\n          } else if (typeof arg === 'string') {\n            return arg;\n          } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n            return arg.toString();\n          } else if (arg instanceof Error) {\n            return arg.message;\n          } else {\n            try {\n              return JSON.stringify(arg);\n            } catch (ignored) {\n              return null;\n            }\n          }\n        }).filter(arg => arg).join(' ');\n        if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase(),\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\nclass Component {\n  /**\r\n   *\r\n   * @param name The public service name, e.g. app, auth, firestore, database\r\n   * @param instanceFactory Service factory responsible for creating the public interface\r\n   * @param type whether the service provided by the component is public or private\r\n   */\n  constructor(name, instanceFactory, type) {\n    this.name = name;\n    this.instanceFactory = instanceFactory;\n    this.type = type;\n    this.multipleInstances = false;\n    /**\r\n     * Properties to be added to the service namespace\r\n     */\n    this.serviceProps = {};\n    this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\n    this.onInstanceCreated = null;\n  }\n  setInstantiationMode(mode) {\n    this.instantiationMode = mode;\n    return this;\n  }\n  setMultipleInstances(multipleInstances) {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n  setServiceProps(props) {\n    this.serviceProps = props;\n    return this;\n  }\n  setInstanceCreatedCallback(callback) {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\nclass Provider {\n  constructor(name, container) {\n    this.name = name;\n    this.container = container;\n    this.component = null;\n    this.instances = new Map();\n    this.instancesDeferred = new Map();\n    this.instancesOptions = new Map();\n    this.onInitCallbacks = new Map();\n  }\n  /**\r\n   * @param identifier A provider can provide mulitple instances of a service\r\n   * if this.component.multipleInstances is true.\r\n   */\n  get(identifier) {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n      if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n    return this.instancesDeferred.get(normalizedIdentifier).promise;\n  }\n  getImmediate(options) {\n    var _a;\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\n    const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\n    if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n  getComponent() {\n    return this.component;\n  }\n  setComponent(component) {\n    if (component.name !== this.name) {\n      throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\n    }\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n    this.component = component;\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({\n          instanceIdentifier: DEFAULT_ENTRY_NAME\n        });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n  clearInstance(identifier = DEFAULT_ENTRY_NAME) {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete() {\n    const services = Array.from(this.instances.values());\n    await Promise.all([...services.filter(service => 'INTERNAL' in service) // legacy services\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    .map(service => service.INTERNAL.delete()), ...services.filter(service => '_delete' in service) // modularized services\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    .map(service => service._delete())]);\n  }\n  isComponentSet() {\n    return this.component != null;\n  }\n  isInitialized(identifier = DEFAULT_ENTRY_NAME) {\n    return this.instances.has(identifier);\n  }\n  getOptions(identifier = DEFAULT_ENTRY_NAME) {\n    return this.instancesOptions.get(identifier) || {};\n  }\n  initialize(opts = {}) {\n    const {\n      options = {}\n    } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\n    }\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    });\n    // resolve any pending promise waiting for the service instance\n    for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n    return instance;\n  }\n  /**\r\n   *\r\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n   *\r\n   * @param identifier An optional instance identifier\r\n   * @returns a function to unregister the callback\r\n   */\n  onInit(callback, identifier) {\n    var _a;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n  /**\r\n   * Invoke onInit callbacks synchronously\r\n   * @param instance the service instance`\r\n   */\n  invokeOnInitCallbacks(instance, identifier) {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch (_a) {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n  getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }) {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n      /**\r\n       * Invoke onInit listeners.\r\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n       * while onInit listeners are registered by consumers of the provider.\r\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n      /**\r\n       * Order is important\r\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n       * makes `isInitialized()` return true.\r\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\n        } catch (_a) {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n    return instance || null;\n  }\n  normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  shouldAutoInitialize() {\n    return !!this.component && this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */;\n  }\n}\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier) {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\nfunction isComponentEager(component) {\n  return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\nclass ComponentContainer {\n  constructor(name) {\n    this.name = name;\n    this.providers = new Map();\n  }\n  /**\r\n   *\r\n   * @param component Component being added\r\n   * @param overwrite When a component with the same name has already been registered,\r\n   * if overwrite is true: overwrite the existing component with the new component and create a new\r\n   * provider with the new component. It can be useful in tests where you want to use different mocks\r\n   * for different tests.\r\n   * if overwrite is false: throw an exception\r\n   */\n  addComponent(component) {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\n    }\n    provider.setComponent(component);\n  }\n  addOrOverwriteComponent(component) {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n    this.addComponent(component);\n  }\n  /**\r\n   * getProvider provides a type safe interface where it can only be called with a field name\r\n   * present in NameServiceMapping interface.\r\n   *\r\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n   * themselves.\r\n   */\n  getProvider(name) {\n    if (this.providers.has(name)) {\n      return this.providers.get(name);\n    }\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider(name, this);\n    this.providers.set(name, provider);\n    return provider;\n  }\n  getProviders() {\n    return Array.from(this.providers.values());\n  }\n}\nexport { Component, ComponentContainer, Provider };\n","const instanceOfAny = (object, constructors) => constructors.some(c => object instanceof c);\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n  return idbProxyableTypes || (idbProxyableTypes = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction]);\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n  return cursorAdvanceMethods || (cursorAdvanceMethods = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey]);\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n  const promise = new Promise((resolve, reject) => {\n    const unlisten = () => {\n      request.removeEventListener('success', success);\n      request.removeEventListener('error', error);\n    };\n    const success = () => {\n      resolve(wrap(request.result));\n      unlisten();\n    };\n    const error = () => {\n      reject(request.error);\n      unlisten();\n    };\n    request.addEventListener('success', success);\n    request.addEventListener('error', error);\n  });\n  promise.then(value => {\n    // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n    // (see wrapFunction).\n    if (value instanceof IDBCursor) {\n      cursorRequestMap.set(value, request);\n    }\n    // Catching to avoid \"Uncaught Promise exceptions\"\n  }).catch(() => {});\n  // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n  // is because we create many promises from a single IDBRequest.\n  reverseTransformCache.set(promise, request);\n  return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n  // Early bail if we've already created a done promise for this transaction.\n  if (transactionDoneMap.has(tx)) return;\n  const done = new Promise((resolve, reject) => {\n    const unlisten = () => {\n      tx.removeEventListener('complete', complete);\n      tx.removeEventListener('error', error);\n      tx.removeEventListener('abort', error);\n    };\n    const complete = () => {\n      resolve();\n      unlisten();\n    };\n    const error = () => {\n      reject(tx.error || new DOMException('AbortError', 'AbortError'));\n      unlisten();\n    };\n    tx.addEventListener('complete', complete);\n    tx.addEventListener('error', error);\n    tx.addEventListener('abort', error);\n  });\n  // Cache it for later retrieval.\n  transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n  get(target, prop, receiver) {\n    if (target instanceof IDBTransaction) {\n      // Special handling for transaction.done.\n      if (prop === 'done') return transactionDoneMap.get(target);\n      // Polyfill for objectStoreNames because of Edge.\n      if (prop === 'objectStoreNames') {\n        return target.objectStoreNames || transactionStoreNamesMap.get(target);\n      }\n      // Make tx.store return the only store in the transaction, or undefined if there are many.\n      if (prop === 'store') {\n        return receiver.objectStoreNames[1] ? undefined : receiver.objectStore(receiver.objectStoreNames[0]);\n      }\n    }\n    // Else transform whatever we get back.\n    return wrap(target[prop]);\n  },\n  set(target, prop, value) {\n    target[prop] = value;\n    return true;\n  },\n  has(target, prop) {\n    if (target instanceof IDBTransaction && (prop === 'done' || prop === 'store')) {\n      return true;\n    }\n    return prop in target;\n  }\n};\nfunction replaceTraps(callback) {\n  idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n  // Due to expected object equality (which is enforced by the caching in `wrap`), we\n  // only create one new func per func.\n  // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n  if (func === IDBDatabase.prototype.transaction && !('objectStoreNames' in IDBTransaction.prototype)) {\n    return function (storeNames, ...args) {\n      const tx = func.call(unwrap(this), storeNames, ...args);\n      transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n      return wrap(tx);\n    };\n  }\n  // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n  // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n  // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n  // with real promises, so each advance methods returns a new promise for the cursor object, or\n  // undefined if the end of the cursor has been reached.\n  if (getCursorAdvanceMethods().includes(func)) {\n    return function (...args) {\n      // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n      // the original object.\n      func.apply(unwrap(this), args);\n      return wrap(cursorRequestMap.get(this));\n    };\n  }\n  return function (...args) {\n    // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n    // the original object.\n    return wrap(func.apply(unwrap(this), args));\n  };\n}\nfunction transformCachableValue(value) {\n  if (typeof value === 'function') return wrapFunction(value);\n  // This doesn't return, it just creates a 'done' promise for the transaction,\n  // which is later returned for transaction.done (see idbObjectHandler).\n  if (value instanceof IDBTransaction) cacheDonePromiseForTransaction(value);\n  if (instanceOfAny(value, getIdbProxyableTypes())) return new Proxy(value, idbProxyTraps);\n  // Return the same value back if we're not going to transform it.\n  return value;\n}\nfunction wrap(value) {\n  // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n  // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n  if (value instanceof IDBRequest) return promisifyRequest(value);\n  // If we've already transformed this value before, reuse the transformed value.\n  // This is faster, but it also provides object equality.\n  if (transformCache.has(value)) return transformCache.get(value);\n  const newValue = transformCachableValue(value);\n  // Not all types are transformed.\n  // These may be primitive types, so they can't be WeakMap keys.\n  if (newValue !== value) {\n    transformCache.set(value, newValue);\n    reverseTransformCache.set(newValue, value);\n  }\n  return newValue;\n}\nconst unwrap = value => reverseTransformCache.get(value);\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, {\n  blocked,\n  upgrade,\n  blocking,\n  terminated\n} = {}) {\n  const request = indexedDB.open(name, version);\n  const openPromise = wrap(request);\n  if (upgrade) {\n    request.addEventListener('upgradeneeded', event => {\n      upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n    });\n  }\n  if (blocked) {\n    request.addEventListener('blocked', event => blocked(\n    // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n    event.oldVersion, event.newVersion, event));\n  }\n  openPromise.then(db => {\n    if (terminated) db.addEventListener('close', () => terminated());\n    if (blocking) {\n      db.addEventListener('versionchange', event => blocking(event.oldVersion, event.newVersion, event));\n    }\n  }).catch(() => {});\n  return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, {\n  blocked\n} = {}) {\n  const request = indexedDB.deleteDatabase(name);\n  if (blocked) {\n    request.addEventListener('blocked', event => blocked(\n    // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n    event.oldVersion, event));\n  }\n  return wrap(request).then(() => undefined);\n}\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n  if (!(target instanceof IDBDatabase && !(prop in target) && typeof prop === 'string')) {\n    return;\n  }\n  if (cachedMethods.get(prop)) return cachedMethods.get(prop);\n  const targetFuncName = prop.replace(/FromIndex$/, '');\n  const useIndex = prop !== targetFuncName;\n  const isWrite = writeMethods.includes(targetFuncName);\n  if (\n  // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n  !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) || !(isWrite || readMethods.includes(targetFuncName))) {\n    return;\n  }\n  const method = async function (storeName, ...args) {\n    // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n    const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n    let target = tx.store;\n    if (useIndex) target = target.index(args.shift());\n    // Must reject if op rejects.\n    // If it's a write operation, must reject if tx.done rejects.\n    // Must reject with op rejection first.\n    // Must resolve with op value.\n    // Must handle both promises (no unhandled rejections)\n    return (await Promise.all([target[targetFuncName](...args), isWrite && tx.done]))[0];\n  };\n  cachedMethods.set(prop, method);\n  return method;\n}\nreplaceTraps(oldTraps => ({\n  ...oldTraps,\n  get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n  has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop)\n}));\nexport { deleteDB, openDB };","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nclass PlatformLoggerServiceImpl {\n  constructor(container) {\n    this.container = container;\n  }\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString() {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers.map(provider => {\n      if (isVersionServiceProvider(provider)) {\n        const service = provider.getImmediate();\n        return `${service.library}/${service.version}`;\n      } else {\n        return null;\n      }\n    }).filter(logString => logString).join(' ');\n  }\n}\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\nfunction isVersionServiceProvider(provider) {\n  const component = provider.getComponent();\n  return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.9.25\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst logger = new Logger('@firebase/app');\nconst name$n = \"@firebase/app-compat\";\nconst name$m = \"@firebase/analytics-compat\";\nconst name$l = \"@firebase/analytics\";\nconst name$k = \"@firebase/app-check-compat\";\nconst name$j = \"@firebase/app-check\";\nconst name$i = \"@firebase/auth\";\nconst name$h = \"@firebase/auth-compat\";\nconst name$g = \"@firebase/database\";\nconst name$f = \"@firebase/database-compat\";\nconst name$e = \"@firebase/functions\";\nconst name$d = \"@firebase/functions-compat\";\nconst name$c = \"@firebase/installations\";\nconst name$b = \"@firebase/installations-compat\";\nconst name$a = \"@firebase/messaging\";\nconst name$9 = \"@firebase/messaging-compat\";\nconst name$8 = \"@firebase/performance\";\nconst name$7 = \"@firebase/performance-compat\";\nconst name$6 = \"@firebase/remote-config\";\nconst name$5 = \"@firebase/remote-config-compat\";\nconst name$4 = \"@firebase/storage\";\nconst name$3 = \"@firebase/storage-compat\";\nconst name$2 = \"@firebase/firestore\";\nconst name$1 = \"@firebase/firestore-compat\";\nconst name = \"firebase\";\nconst version = \"10.7.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\nconst PLATFORM_LOG_STRING = {\n  [name$o]: 'fire-core',\n  [name$n]: 'fire-core-compat',\n  [name$l]: 'fire-analytics',\n  [name$m]: 'fire-analytics-compat',\n  [name$j]: 'fire-app-check',\n  [name$k]: 'fire-app-check-compat',\n  [name$i]: 'fire-auth',\n  [name$h]: 'fire-auth-compat',\n  [name$g]: 'fire-rtdb',\n  [name$f]: 'fire-rtdb-compat',\n  [name$e]: 'fire-fn',\n  [name$d]: 'fire-fn-compat',\n  [name$c]: 'fire-iid',\n  [name$b]: 'fire-iid-compat',\n  [name$a]: 'fire-fcm',\n  [name$9]: 'fire-fcm-compat',\n  [name$8]: 'fire-perf',\n  [name$7]: 'fire-perf-compat',\n  [name$6]: 'fire-rc',\n  [name$5]: 'fire-rc-compat',\n  [name$4]: 'fire-gcs',\n  [name$3]: 'fire-gcs-compat',\n  [name$2]: 'fire-fst',\n  [name$1]: 'fire-fst-compat',\n  'fire-js': 'fire-js',\n  [name]: 'fire-js-all'\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @internal\r\n */\nconst _apps = new Map();\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst _components = new Map();\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\nfunction _addComponent(app, component) {\n  try {\n    app.container.addComponent(component);\n  } catch (e) {\n    logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n  }\n}\n/**\r\n *\r\n * @internal\r\n */\nfunction _addOrOverwriteComponent(app, component) {\n  app.container.addOrOverwriteComponent(component);\n}\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\nfunction _registerComponent(component) {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(`There were multiple attempts to register component ${componentName}.`);\n    return false;\n  }\n  _components.set(componentName, component);\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app, component);\n  }\n  return true;\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\nfunction _getProvider(app, name) {\n  const heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n    optional: true\n  });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return app.container.getProvider(name);\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\nfunction _clearComponents() {\n  _components.clear();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst ERRORS = {\n  [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" + 'call initializeApp() first',\n  [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\n  [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\n  [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\n  [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\n  [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.',\n  [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\n  [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nclass FirebaseAppImpl {\n  constructor(options, config, container) {\n    this._isDeleted = false;\n    this._options = Object.assign({}, options);\n    this._config = Object.assign({}, config);\n    this._name = config.name;\n    this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\n  }\n\n  get automaticDataCollectionEnabled() {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n  set automaticDataCollectionEnabled(val) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n  get name() {\n    this.checkDestroyed();\n    return this._name;\n  }\n  get options() {\n    this.checkDestroyed();\n    return this._options;\n  }\n  get config() {\n    this.checkDestroyed();\n    return this._config;\n  }\n  get container() {\n    return this._container;\n  }\n  get isDeleted() {\n    return this._isDeleted;\n  }\n  set isDeleted(val) {\n    this._isDeleted = val;\n  }\n  /**\r\n   * This function will throw an Error if the App has already been deleted -\r\n   * use before performing API actions on the App.\r\n   */\n  checkDestroyed() {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, {\n        appName: this._name\n      });\n    }\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\nconst SDK_VERSION = version;\nfunction initializeApp(_options, rawConfig = {}) {\n  let options = _options;\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = {\n      name\n    };\n  }\n  const config = Object.assign({\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false\n  }, rawConfig);\n  const name = config.name;\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\n      appName: String(name)\n    });\n  }\n  options || (options = getDefaultAppConfig());\n  if (!options) {\n    throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n  }\n\n  const existingApp = _apps.get(name);\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (deepEqual(options, existingApp.options) && deepEqual(config, existingApp.config)) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, {\n        appName: name\n      });\n    }\n  }\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n  const newApp = new FirebaseAppImpl(options, config, container);\n  _apps.set(name, newApp);\n  return newApp;\n}\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, {\n      appName: name\n    });\n  }\n  return app;\n}\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\nfunction getApps() {\n  return Array.from(_apps.values());\n}\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\nasync function deleteApp(app) {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(app.container.getProviders().map(provider => provider.delete()));\n    app.isDeleted = true;\n  }\n}\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\nfunction registerVersion(libraryKeyOrName, version, variant) {\n  var _a;\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [`Unable to register library \"${library}\" with version \"${version}\":`];\n    if (libraryMismatch) {\n      warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(new Component(`${library}-version`, () => ({\n    library,\n    version\n  }), \"VERSION\" /* ComponentType.VERSION */));\n}\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\nfunction onLog(logCallback, options) {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\n  }\n\n  setUserLogHandler(logCallback, options);\n}\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\nfunction setLogLevel(logLevel) {\n  setLogLevel$1(logLevel);\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\nlet dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\nasync function readHeartbeatsFromIndexedDB(app) {\n  try {\n    const db = await getDbPromise();\n    const result = await db.transaction(STORE_NAME).objectStore(STORE_NAME).get(computeKey(app));\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\n        originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\n        originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\nfunction computeKey(app) {\n  return `${app.name}!${app.options.appId}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\nclass HeartbeatServiceImpl {\n  constructor(container) {\n    this.container = container;\n    /**\r\n     * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n     * the header string.\r\n     * Stores one record per date. This will be consolidated into the standard\r\n     * format of one record per user agent string before being sent as a header.\r\n     * Populated from indexedDB when the controller is instantiated and should\r\n     * be kept in sync with indexedDB.\r\n     * Leave public for easier testing.\r\n     */\n    this._heartbeatsCache = null;\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n  /**\r\n   * Called to report a heartbeat. The function will generate\r\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n   * to IndexedDB.\r\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n   * already logged, subsequent calls to this function in the same day will be ignored.\r\n   */\n  async triggerHeartbeat() {\n    var _a, _b;\n    const platformLogger = this.container.getProvider('platform-logger').getImmediate();\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n      // If we failed to construct a heartbeats cache, then return immediately.\n      if (((_b = this._heartbeatsCache) === null || _b === void 0 ? void 0 : _b.heartbeats) == null) {\n        return;\n      }\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({\n        date,\n        agent\n      });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\n      const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n      const now = Date.now();\n      return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n    });\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n  /**\r\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n   * It also clears all heartbeats from memory as well as in IndexedDB.\r\n   *\r\n   * NOTE: Consuming product SDKs should not send the header if this method\r\n   * returns an empty string.\r\n   */\n  async getHeartbeatsHeader() {\n    var _a;\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null || this._heartbeatsCache.heartbeats.length === 0) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const {\n      heartbeatsToSend,\n      unsentEntries\n    } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\n    const headerString = base64urlEncodeWithoutPadding(JSON.stringify({\n      version: 2,\n      heartbeats: heartbeatsToSend\n    }));\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\nfunction getUTCDateString() {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\nclass HeartbeatStorageImpl {\n  constructor(app) {\n    this.app = app;\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck() {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable().then(() => true).catch(() => false);\n    }\n  }\n  /**\r\n   * Read all heartbeats.\r\n   */\n  async read() {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return {\n        heartbeats: []\n      };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject === null || idbHeartbeatObject === void 0 ? void 0 : idbHeartbeatObject.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return {\n          heartbeats: []\n        };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject) {\n    var _a;\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject) {\n    var _a;\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [...existingHeartbeatsObject.heartbeats, ...heartbeatsObject.heartbeats]\n      });\n    }\n  }\n}\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\nfunction countBytes(heartbeatsCache) {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n  // heartbeatsCache wrapper properties\n  JSON.stringify({\n    version: 2,\n    heartbeats: heartbeatsCache\n  })).length;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction registerCoreComponents(variant) {\n  _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n  _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n  // Register `app` package.\n  registerVersion(name$o, version$1, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name$o, version$1, 'esm2017');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\nregisterCoreComponents('');\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n","const instanceOfAny = (object, constructors) => constructors.some(c => object instanceof c);\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n  return idbProxyableTypes || (idbProxyableTypes = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction]);\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n  return cursorAdvanceMethods || (cursorAdvanceMethods = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey]);\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n  const promise = new Promise((resolve, reject) => {\n    const unlisten = () => {\n      request.removeEventListener('success', success);\n      request.removeEventListener('error', error);\n    };\n    const success = () => {\n      resolve(wrap(request.result));\n      unlisten();\n    };\n    const error = () => {\n      reject(request.error);\n      unlisten();\n    };\n    request.addEventListener('success', success);\n    request.addEventListener('error', error);\n  });\n  promise.then(value => {\n    // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n    // (see wrapFunction).\n    if (value instanceof IDBCursor) {\n      cursorRequestMap.set(value, request);\n    }\n    // Catching to avoid \"Uncaught Promise exceptions\"\n  }).catch(() => {});\n  // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n  // is because we create many promises from a single IDBRequest.\n  reverseTransformCache.set(promise, request);\n  return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n  // Early bail if we've already created a done promise for this transaction.\n  if (transactionDoneMap.has(tx)) return;\n  const done = new Promise((resolve, reject) => {\n    const unlisten = () => {\n      tx.removeEventListener('complete', complete);\n      tx.removeEventListener('error', error);\n      tx.removeEventListener('abort', error);\n    };\n    const complete = () => {\n      resolve();\n      unlisten();\n    };\n    const error = () => {\n      reject(tx.error || new DOMException('AbortError', 'AbortError'));\n      unlisten();\n    };\n    tx.addEventListener('complete', complete);\n    tx.addEventListener('error', error);\n    tx.addEventListener('abort', error);\n  });\n  // Cache it for later retrieval.\n  transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n  get(target, prop, receiver) {\n    if (target instanceof IDBTransaction) {\n      // Special handling for transaction.done.\n      if (prop === 'done') return transactionDoneMap.get(target);\n      // Polyfill for objectStoreNames because of Edge.\n      if (prop === 'objectStoreNames') {\n        return target.objectStoreNames || transactionStoreNamesMap.get(target);\n      }\n      // Make tx.store return the only store in the transaction, or undefined if there are many.\n      if (prop === 'store') {\n        return receiver.objectStoreNames[1] ? undefined : receiver.objectStore(receiver.objectStoreNames[0]);\n      }\n    }\n    // Else transform whatever we get back.\n    return wrap(target[prop]);\n  },\n  set(target, prop, value) {\n    target[prop] = value;\n    return true;\n  },\n  has(target, prop) {\n    if (target instanceof IDBTransaction && (prop === 'done' || prop === 'store')) {\n      return true;\n    }\n    return prop in target;\n  }\n};\nfunction replaceTraps(callback) {\n  idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n  // Due to expected object equality (which is enforced by the caching in `wrap`), we\n  // only create one new func per func.\n  // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n  if (func === IDBDatabase.prototype.transaction && !('objectStoreNames' in IDBTransaction.prototype)) {\n    return function (storeNames, ...args) {\n      const tx = func.call(unwrap(this), storeNames, ...args);\n      transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n      return wrap(tx);\n    };\n  }\n  // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n  // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n  // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n  // with real promises, so each advance methods returns a new promise for the cursor object, or\n  // undefined if the end of the cursor has been reached.\n  if (getCursorAdvanceMethods().includes(func)) {\n    return function (...args) {\n      // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n      // the original object.\n      func.apply(unwrap(this), args);\n      return wrap(cursorRequestMap.get(this));\n    };\n  }\n  return function (...args) {\n    // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n    // the original object.\n    return wrap(func.apply(unwrap(this), args));\n  };\n}\nfunction transformCachableValue(value) {\n  if (typeof value === 'function') return wrapFunction(value);\n  // This doesn't return, it just creates a 'done' promise for the transaction,\n  // which is later returned for transaction.done (see idbObjectHandler).\n  if (value instanceof IDBTransaction) cacheDonePromiseForTransaction(value);\n  if (instanceOfAny(value, getIdbProxyableTypes())) return new Proxy(value, idbProxyTraps);\n  // Return the same value back if we're not going to transform it.\n  return value;\n}\nfunction wrap(value) {\n  // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n  // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n  if (value instanceof IDBRequest) return promisifyRequest(value);\n  // If we've already transformed this value before, reuse the transformed value.\n  // This is faster, but it also provides object equality.\n  if (transformCache.has(value)) return transformCache.get(value);\n  const newValue = transformCachableValue(value);\n  // Not all types are transformed.\n  // These may be primitive types, so they can't be WeakMap keys.\n  if (newValue !== value) {\n    transformCache.set(value, newValue);\n    reverseTransformCache.set(newValue, value);\n  }\n  return newValue;\n}\nconst unwrap = value => reverseTransformCache.get(value);\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, {\n  blocked,\n  upgrade,\n  blocking,\n  terminated\n} = {}) {\n  const request = indexedDB.open(name, version);\n  const openPromise = wrap(request);\n  if (upgrade) {\n    request.addEventListener('upgradeneeded', event => {\n      upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n    });\n  }\n  if (blocked) request.addEventListener('blocked', () => blocked());\n  openPromise.then(db => {\n    if (terminated) db.addEventListener('close', () => terminated());\n    if (blocking) db.addEventListener('versionchange', () => blocking());\n  }).catch(() => {});\n  return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, {\n  blocked\n} = {}) {\n  const request = indexedDB.deleteDatabase(name);\n  if (blocked) request.addEventListener('blocked', () => blocked());\n  return wrap(request).then(() => undefined);\n}\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n  if (!(target instanceof IDBDatabase && !(prop in target) && typeof prop === 'string')) {\n    return;\n  }\n  if (cachedMethods.get(prop)) return cachedMethods.get(prop);\n  const targetFuncName = prop.replace(/FromIndex$/, '');\n  const useIndex = prop !== targetFuncName;\n  const isWrite = writeMethods.includes(targetFuncName);\n  if (\n  // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n  !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) || !(isWrite || readMethods.includes(targetFuncName))) {\n    return;\n  }\n  const method = async function (storeName, ...args) {\n    // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n    const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n    let target = tx.store;\n    if (useIndex) target = target.index(args.shift());\n    // Must reject if op rejects.\n    // If it's a write operation, must reject if tx.done rejects.\n    // Must reject with op rejection first.\n    // Must resolve with op value.\n    // Must handle both promises (no unhandled rejections)\n    return (await Promise.all([target[targetFuncName](...args), isWrite && tx.done]))[0];\n  };\n  cachedMethods.set(prop, method);\n  return method;\n}\nreplaceTraps(oldTraps => ({\n  ...oldTraps,\n  get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n  has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop)\n}));\nexport { deleteDB, openDB };","import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\nconst name = \"@firebase/installations\";\nconst version = \"0.6.4\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst PENDING_TIMEOUT_MS = 10000;\nconst PACKAGE_VERSION = `w:${version}`;\nconst INTERNAL_AUTH_VERSION = 'FIS_v2';\nconst INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\nconst TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\nconst SERVICE = 'installations';\nconst SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst ERROR_DESCRIPTION_MAP = {\n  [\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\n  [\"not-registered\" /* ErrorCode.NOT_REGISTERED */]: 'Firebase Installation is not registered.',\n  [\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */]: 'Firebase Installation not found.',\n  [\"request-failed\" /* ErrorCode.REQUEST_FAILED */]: '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [\"app-offline\" /* ErrorCode.APP_OFFLINE */]: 'Could not process request. Application offline.',\n  [\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */]: \"Can't delete installation while there is a pending registration request.\"\n};\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nfunction isServerError(error) {\n  return error instanceof FirebaseError && error.code.includes(\"request-failed\" /* ErrorCode.REQUEST_FAILED */);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getInstallationsEndpoint({\n  projectId\n}) {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\nfunction extractAuthTokenInfoFromResponse(response) {\n  return {\n    token: response.token,\n    requestStatus: 2 /* RequestStatus.COMPLETED */,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\nasync function getErrorFromResponse(requestName, response) {\n  const responseJson = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(\"request-failed\" /* ErrorCode.REQUEST_FAILED */, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\nfunction getHeaders({\n  apiKey\n}) {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\nfunction getHeadersWithAuth(appConfig, {\n  refreshToken\n}) {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\nasync function retryIfServerError(fn) {\n  const result = await fn();\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n  return result;\n}\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\nfunction getAuthorizationHeader(refreshToken) {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function createInstallationRequest({\n  appConfig,\n  heartbeatServiceProvider\n}, {\n  fid\n}) {\n  const endpoint = getInstallationsEndpoint(appConfig);\n  const headers = getHeaders(appConfig);\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n  const request = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue = await response.json();\n    const registeredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: 2 /* RequestStatus.COMPLETED */,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Returns a promise that resolves after given time passes. */\nfunction sleep(ms) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction bufferToBase64UrlSafe(array) {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nconst INVALID_FID = '';\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\nfunction generateFid() {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto = self.crypto || self.msCrypto;\n    crypto.getRandomValues(fidByteArray);\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + fidByteArray[0] % 0b00010000;\n    const fid = encode(fidByteArray);\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch (_a) {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray) {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Returns a string key that can be used to identify the app. */\nfunction getKey(appConfig) {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst fidChangeCallbacks = new Map();\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\nfunction fidChanged(appConfig, fid) {\n  const key = getKey(appConfig);\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\nfunction addCallback(appConfig, callback) {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n  const key = getKey(appConfig);\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\nfunction removeCallback(appConfig, callback) {\n  const key = getKey(appConfig);\n  const callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    return;\n  }\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\nfunction callFidChangeCallbacks(key, fid) {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\nfunction broadcastFidChange(key, fid) {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({\n      key,\n      fid\n    });\n  }\n  closeBroadcastChannel();\n}\nlet broadcastChannel = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel() {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\nfunction closeBroadcastChannel() {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\nlet dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nasync function set(appConfig, value) {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await objectStore.get(key);\n  await objectStore.put(value, key);\n  await tx.done;\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n  return value;\n}\n/** Removes record(s) from the objectStore that match the given key. */\nasync function remove(appConfig) {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\nasync function update(appConfig, updateFn) {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await store.get(key);\n  const newValue = updateFn(oldValue);\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.done;\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n  return newValue;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\nasync function getInstallationEntry(installations) {\n  let registrationPromise;\n  const installationEntry = await update(installations.appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(installations, installationEntry);\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return {\n      installationEntry: await registrationPromise\n    };\n  }\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\nfunction updateOrCreateInstallationEntry(oldEntry) {\n  const entry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n  };\n\n  return clearTimedOutRequest(entry);\n}\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\nfunction triggerRegistrationIfNecessary(installations, installationEntry) {\n  if (installationEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */));\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: 1 /* RequestStatus.IN_PROGRESS */,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(installations, inProgressEntry);\n    return {\n      installationEntry: inProgressEntry,\n      registrationPromise\n    };\n  } else if (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return {\n      installationEntry\n    };\n  }\n}\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(installations, installationEntry) {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(installations, installationEntry);\n    return set(installations.appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(installations.appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n      });\n    }\n\n    throw e;\n  }\n}\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(installations) {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n  let entry = await updateInstallationRequest(installations.appConfig);\n  while (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n    // createInstallation request still in progress.\n    await sleep(100);\n    entry = await updateInstallationRequest(installations.appConfig);\n  }\n  if (entry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n    // The request timed out or failed in a different call. Try again.\n    const {\n      installationEntry,\n      registrationPromise\n    } = await getInstallationEntry(installations);\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry;\n    }\n  }\n  return entry;\n}\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\nfunction updateInstallationRequest(appConfig) {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */);\n    }\n\n    return clearTimedOutRequest(oldEntry);\n  });\n}\nfunction clearTimedOutRequest(entry) {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n    };\n  }\n\n  return entry;\n}\nfunction hasInstallationRequestTimedOut(installationEntry) {\n  return installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */ && installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function generateAuthTokenRequest({\n  appConfig,\n  heartbeatServiceProvider\n}, installationEntry) {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION,\n      appId: appConfig.appId\n    }\n  };\n  const request = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue = await response.json();\n    const completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\nfunction getGenerateAuthTokenEndpoint(appConfig, {\n  fid\n}) {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\nasync function refreshAuthToken(installations, forceRefresh = false) {\n  let tokenPromise;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n  const authToken = tokenPromise ? await tokenPromise : entry.authToken;\n  return authToken;\n}\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\nasync function waitUntilAuthTokenRequest(installations, forceRefresh) {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === 0 /* RequestStatus.NOT_STARTED */) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\nfunction updateAuthTokenRequest(appConfig) {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return Object.assign(Object.assign({}, oldEntry), {\n        authToken: {\n          requestStatus: 0 /* RequestStatus.NOT_STARTED */\n        }\n      });\n    }\n\n    return oldEntry;\n  });\n}\nasync function fetchAuthTokenFromServer(installations, installationEntry) {\n  try {\n    const authToken = await generateAuthTokenRequest(installations, installationEntry);\n    const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), {\n      authToken\n    });\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (isServerError(e) && (e.customData.serverCode === 401 || e.customData.serverCode === 404)) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), {\n        authToken: {\n          requestStatus: 0 /* RequestStatus.NOT_STARTED */\n        }\n      });\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\nfunction isEntryRegistered(installationEntry) {\n  return installationEntry !== undefined && installationEntry.registrationStatus === 2 /* RequestStatus.COMPLETED */;\n}\n\nfunction isAuthTokenValid(authToken) {\n  return authToken.requestStatus === 2 /* RequestStatus.COMPLETED */ && !isAuthTokenExpired(authToken);\n}\nfunction isAuthTokenExpired(authToken) {\n  const now = Date.now();\n  return now < authToken.creationTime || authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER;\n}\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\n  const inProgressAuthToken = {\n    requestStatus: 1 /* RequestStatus.IN_PROGRESS */,\n    requestTime: Date.now()\n  };\n  return Object.assign(Object.assign({}, oldEntry), {\n    authToken: inProgressAuthToken\n  });\n}\nfunction hasAuthTokenRequestTimedOut(authToken) {\n  return authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */ && authToken.requestTime + PENDING_TIMEOUT_MS < Date.now();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Creates a Firebase Installation if there isn't one for the app and\r\n * returns the Installation ID.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\nasync function getId(installations) {\n  const installationsImpl = installations;\n  const {\n    installationEntry,\n    registrationPromise\n  } = await getInstallationEntry(installationsImpl);\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n  return installationEntry.fid;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a Firebase Installations auth token, identifying the current\r\n * Firebase Installation.\r\n * @param installations - The `Installations` instance.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\nasync function getToken(installations, forceRefresh = false) {\n  const installationsImpl = installations;\n  await completeInstallationRegistration(installationsImpl);\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\nasync function completeInstallationRegistration(installations) {\n  const {\n    registrationPromise\n  } = await getInstallationEntry(installations);\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function deleteInstallationRequest(appConfig, installationEntry) {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request = {\n    method: 'DELETE',\n    headers\n  };\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\nfunction getDeleteEndpoint(appConfig, {\n  fid\n}) {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Deletes the Firebase Installation and all associated data.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\nasync function deleteInstallations(installations) {\n  const {\n    appConfig\n  } = installations;\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n  if (entry) {\n    if (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */);\n    } else if (entry.registrationStatus === 2 /* RequestStatus.COMPLETED */) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Sets a new callback that will get called when Installation ID changes.\r\n * Returns an unsubscribe function that will remove the callback when called.\r\n * @param installations - The `Installations` instance.\r\n * @param callback - The callback function that is invoked when FID changes.\r\n * @returns A function that can be called to unsubscribe.\r\n *\r\n * @public\r\n */\nfunction onIdChange(installations, callback) {\n  const {\n    appConfig\n  } = installations;\n  addCallback(appConfig, callback);\n  return () => {\n    removeCallback(appConfig, callback);\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns an instance of {@link Installations} associated with the given\r\n * {@link @firebase/app#FirebaseApp} instance.\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * @public\r\n */\nfunction getInstallations(app = getApp()) {\n  const installationsImpl = _getProvider(app, 'installations').getImmediate();\n  return installationsImpl;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction extractAppConfig(app) {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n  // Required app config keys\n  const configKeys = ['projectId', 'apiKey', 'appId'];\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n  return {\n    appName: app.name,\n    projectId: app.options.projectId,\n    apiKey: app.options.apiKey,\n    appId: app.options.appId\n  };\n}\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\n    valueName\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\nconst publicFactory = container => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n  const installationsImpl = {\n    app,\n    appConfig,\n    heartbeatServiceProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\nconst internalFactory = container => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n  const installationsInternal = {\n    getId: () => getId(installations),\n    getToken: forceRefresh => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\nfunction registerInstallations() {\n  _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n  _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n}\n\n/**\r\n * Firebase Installations\r\n *\r\n * @packageDocumentation\r\n */\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name, version, 'esm2017');\nexport { deleteInstallations, getId, getInstallations, getToken, onIdChange };\n","import { ErrorFactory, areCookiesEnabled, isIndexedDBAvailable, validateIndexedDBOpenable, getModularInstance, deepEqual } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport '@firebase/installations';\nconst name = \"@firebase/performance\";\nconst version = \"0.6.4\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\nconst TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nconst TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nconst TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nconst OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\nconst FIRST_PAINT_COUNTER_NAME = '_fp';\nconst FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\nconst FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\nconst CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\nconst CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\nconst SERVICE = 'performance';\nconst SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst ERROR_DESCRIPTION_MAP = {\n  [\"trace started\" /* ErrorCode.TRACE_STARTED_BEFORE */]: 'Trace {$traceName} was started before.',\n  [\"trace stopped\" /* ErrorCode.TRACE_STOPPED_BEFORE */]: 'Trace {$traceName} is not running.',\n  [\"nonpositive trace startTime\" /* ErrorCode.NONPOSITIVE_TRACE_START_TIME */]: 'Trace {$traceName} startTime should be positive.',\n  [\"nonpositive trace duration\" /* ErrorCode.NONPOSITIVE_TRACE_DURATION */]: 'Trace {$traceName} duration should be positive.',\n  [\"no window\" /* ErrorCode.NO_WINDOW */]: 'Window is not available.',\n  [\"no app id\" /* ErrorCode.NO_APP_ID */]: 'App id is not available.',\n  [\"no project id\" /* ErrorCode.NO_PROJECT_ID */]: 'Project id is not available.',\n  [\"no api key\" /* ErrorCode.NO_API_KEY */]: 'Api key is not available.',\n  [\"invalid cc log\" /* ErrorCode.INVALID_CC_LOG */]: 'Attempted to queue invalid cc event',\n  [\"FB not default\" /* ErrorCode.FB_NOT_DEFAULT */]: 'Performance can only start when Firebase app instance is the default one.',\n  [\"RC response not ok\" /* ErrorCode.RC_NOT_OK */]: 'RC response is not ok',\n  [\"invalid attribute name\" /* ErrorCode.INVALID_ATTRIBUTE_NAME */]: 'Attribute name {$attributeName} is invalid.',\n  [\"invalid attribute value\" /* ErrorCode.INVALID_ATTRIBUTE_VALUE */]: 'Attribute value {$attributeValue} is invalid.',\n  [\"invalid custom metric name\" /* ErrorCode.INVALID_CUSTOM_METRIC_NAME */]: 'Custom metric name {$customMetricName} is invalid',\n  [\"invalid String merger input\" /* ErrorCode.INVALID_STRING_MERGER_PARAMETER */]: 'Input for String merger is invalid, contact support team to resolve.',\n  [\"already initialized\" /* ErrorCode.ALREADY_INITIALIZED */]: 'initializePerformance() has already been called with ' + 'different options. To avoid this error, call initializePerformance() with the ' + 'same options as when it was originally called, or call getPerformance() to return the' + ' already initialized instance.'\n};\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nlet apiInstance;\nlet windowInstance;\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\nclass Api {\n  constructor(window) {\n    this.window = window;\n    if (!window) {\n      throw ERROR_FACTORY.create(\"no window\" /* ErrorCode.NO_WINDOW */);\n    }\n\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n  getUrl() {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  }\n  mark(name) {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n    this.performance.mark(name);\n  }\n  measure(measureName, mark1, mark2) {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n    this.performance.measure(measureName, mark1, mark2);\n  }\n  getEntriesByType(type) {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n    return this.performance.getEntriesByType(type);\n  }\n  getEntriesByName(name) {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n    return this.performance.getEntriesByName(name);\n  }\n  getTimeOrigin() {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return this.performance && (this.performance.timeOrigin || this.performance.timing.navigationStart);\n  }\n  requiredApisAvailable() {\n    if (!fetch || !Promise || !areCookiesEnabled()) {\n      consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\n      return false;\n    }\n    if (!isIndexedDBAvailable()) {\n      consoleLogger.info('IndexedDB is not supported by current browswer');\n      return false;\n    }\n    return true;\n  }\n  setupObserver(entryType, callback) {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    });\n    // Start observing the entry types you care about.\n    observer.observe({\n      entryTypes: [entryType]\n    });\n  }\n  static getInstance() {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n    return apiInstance;\n  }\n}\nfunction setupApi(window) {\n  windowInstance = window;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nlet iid;\nfunction getIidPromise(installationsService) {\n  const iidPromise = installationsService.getId();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  iidPromise.then(iidVal => {\n    iid = iidVal;\n  });\n  return iidPromise;\n}\n// This method should be used after the iid is retrieved by getIidPromise method.\nfunction getIid() {\n  return iid;\n}\nfunction getAuthTokenPromise(installationsService) {\n  const authTokenPromise = installationsService.getToken();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  authTokenPromise.then(authTokenVal => {});\n  return authTokenPromise;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction mergeStrings(part1, part2) {\n  const sizeDiff = part1.length - part2.length;\n  if (sizeDiff < 0 || sizeDiff > 1) {\n    throw ERROR_FACTORY.create(\"invalid String merger input\" /* ErrorCode.INVALID_STRING_MERGER_PARAMETER */);\n  }\n\n  const resultArray = [];\n  for (let i = 0; i < part1.length; i++) {\n    resultArray.push(part1.charAt(i));\n    if (part2.length > i) {\n      resultArray.push(part2.charAt(i));\n    }\n  }\n  return resultArray.join('');\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nlet settingsServiceInstance;\nclass SettingsService {\n  constructor() {\n    // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n    this.instrumentationEnabled = true;\n    // The variable which controls logging of custom traces.\n    this.dataCollectionEnabled = true;\n    // Configuration flags set through remote config.\n    this.loggingEnabled = false;\n    // Sampling rate between 0 and 1.\n    this.tracesSamplingRate = 1;\n    this.networkRequestsSamplingRate = 1;\n    // Address of logging service.\n    this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n    // Performance event transport endpoint URL which should be compatible with proto3.\n    // New Address for transport service, not configurable via Remote Config.\n    this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n    this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\n    // Source type for performance event logs.\n    this.logSource = 462;\n    // Flags which control per session logging of traces and network requests.\n    this.logTraceAfterSampling = false;\n    this.logNetworkAfterSampling = false;\n    // TTL of config retrieved from remote config in hours.\n    this.configTimeToLive = 12;\n  }\n  getFlTransportFullUrl() {\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\n  }\n  static getInstance() {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n    return settingsServiceInstance;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar VisibilityState = /*#__PURE__*/function (VisibilityState) {\n  VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\n  return VisibilityState;\n}(VisibilityState || {});\nconst RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nconst ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nconst MAX_ATTRIBUTE_NAME_LENGTH = 40;\nconst MAX_ATTRIBUTE_VALUE_LENGTH = 100;\nfunction getServiceWorkerStatus() {\n  const navigator = Api.getInstance().navigator;\n  if (navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker) {\n    if (navigator.serviceWorker.controller) {\n      return 2 /* ServiceWorkerStatus.CONTROLLED */;\n    } else {\n      return 3 /* ServiceWorkerStatus.UNCONTROLLED */;\n    }\n  } else {\n    return 1 /* ServiceWorkerStatus.UNSUPPORTED */;\n  }\n}\n\nfunction getVisibilityState() {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\nfunction getEffectiveConnectionType() {\n  const navigator = Api.getInstance().navigator;\n  const navigatorConnection = navigator.connection;\n  const effectiveType = navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return 1 /* EffectiveConnectionType.CONNECTION_SLOW_2G */;\n    case '2g':\n      return 2 /* EffectiveConnectionType.CONNECTION_2G */;\n    case '3g':\n      return 3 /* EffectiveConnectionType.CONNECTION_3G */;\n    case '4g':\n      return 4 /* EffectiveConnectionType.CONNECTION_4G */;\n    default:\n      return 0 /* EffectiveConnectionType.UNKNOWN */;\n  }\n}\n\nfunction isValidCustomAttributeName(name) {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n  const matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(prefix => name.startsWith(prefix));\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\nfunction isValidCustomAttributeValue(value) {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getAppId(firebaseApp) {\n  var _a;\n  const appId = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.appId;\n  if (!appId) {\n    throw ERROR_FACTORY.create(\"no app id\" /* ErrorCode.NO_APP_ID */);\n  }\n\n  return appId;\n}\nfunction getProjectId(firebaseApp) {\n  var _a;\n  const projectId = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.projectId;\n  if (!projectId) {\n    throw ERROR_FACTORY.create(\"no project id\" /* ErrorCode.NO_PROJECT_ID */);\n  }\n\n  return projectId;\n}\nfunction getApiKey(firebaseApp) {\n  var _a;\n  const apiKey = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.apiKey;\n  if (!apiKey) {\n    throw ERROR_FACTORY.create(\"no api key\" /* ErrorCode.NO_API_KEY */);\n  }\n\n  return apiKey;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nconst DEFAULT_CONFIGS = {\n  loggingEnabled: true\n};\nconst FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\nfunction getConfig(performanceController, iid) {\n  const config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n  return getRemoteConfig(performanceController, iid).then(processConfig).then(config => storeConfig(config), /** Do nothing for error, use defaults set in settings service. */\n  () => {});\n}\nfunction getStoredConfig() {\n  const localStorage = Api.getInstance().localStorage;\n  if (!localStorage) {\n    return;\n  }\n  const expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n  const configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) {\n    return;\n  }\n  try {\n    const configResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch (_a) {\n    return;\n  }\n}\nfunction storeConfig(config) {\n  const localStorage = Api.getInstance().localStorage;\n  if (!config || !localStorage) {\n    return;\n  }\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() + SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\n}\nconst COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\nfunction getRemoteConfig(performanceController, iid) {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise(performanceController.installations).then(authToken => {\n    const projectId = getProjectId(performanceController.app);\n    const apiKey = getApiKey(performanceController.app);\n    const configEndPoint = `https://firebaseremoteconfig.googleapis.com/v1/projects/${projectId}/namespaces/fireperf:fetch?key=${apiKey}`;\n    const request = new Request(configEndPoint, {\n      method: 'POST',\n      headers: {\n        Authorization: `${FIS_AUTH_PREFIX} ${authToken}`\n      },\n      /* eslint-disable camelcase */\n      body: JSON.stringify({\n        app_instance_id: iid,\n        app_instance_id_token: authToken,\n        app_id: getAppId(performanceController.app),\n        app_version: SDK_VERSION,\n        sdk_version: REMOTE_CONFIG_SDK_VERSION\n      })\n      /* eslint-enable camelcase */\n    });\n\n    return fetch(request).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      // In case response is not ok. This will be caught by catch.\n      throw ERROR_FACTORY.create(\"RC response not ok\" /* ErrorCode.RC_NOT_OK */);\n    });\n  }).catch(() => {\n    consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n    return undefined;\n  });\n}\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\nfunction processConfig(config) {\n  if (!config) {\n    return config;\n  }\n  const settingsServiceInstance = SettingsService.getInstance();\n  const entries = config.entries || {};\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is\n    // known.\n    settingsServiceInstance.loggingEnabled = String(entries.fpr_enabled) === 'true';\n  } else {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\n  }\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  } else if (DEFAULT_CONFIGS.logSource) {\n    settingsServiceInstance.logSource = DEFAULT_CONFIGS.logSource;\n  }\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } else if (DEFAULT_CONFIGS.logEndPointUrl) {\n    settingsServiceInstance.logEndPointUrl = DEFAULT_CONFIGS.logEndPointUrl;\n  }\n  // Key from Remote Config has to be non-empty string, otherwsie use local value.\n  if (entries.fpr_log_transport_key) {\n    settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\n  } else if (DEFAULT_CONFIGS.transportKey) {\n    settingsServiceInstance.transportKey = DEFAULT_CONFIGS.transportKey;\n  }\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\n  } else if (DEFAULT_CONFIGS.networkRequestsSamplingRate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = DEFAULT_CONFIGS.networkRequestsSamplingRate;\n  }\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\n  } else if (DEFAULT_CONFIGS.tracesSamplingRate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = DEFAULT_CONFIGS.tracesSamplingRate;\n  }\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\n  return config;\n}\nfunction configValid(expiry) {\n  return Number(expiry) > Date.now();\n}\nfunction shouldLogAfterSampling(samplingRate) {\n  return Math.random() <= samplingRate;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nlet initializationStatus = 1 /* InitializationStatus.notInitialized */;\nlet initializationPromise;\nfunction getInitializationPromise(performanceController) {\n  initializationStatus = 2 /* InitializationStatus.initializationPending */;\n  initializationPromise = initializationPromise || initializePerf(performanceController);\n  return initializationPromise;\n}\nfunction isPerfInitialized() {\n  return initializationStatus === 3 /* InitializationStatus.initialized */;\n}\n\nfunction initializePerf(performanceController) {\n  return getDocumentReadyComplete().then(() => getIidPromise(performanceController.installations)).then(iid => getConfig(performanceController, iid)).then(() => changeInitializationStatus(), () => changeInitializationStatus());\n}\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\nfunction getDocumentReadyComplete() {\n  const document = Api.getInstance().document;\n  return new Promise(resolve => {\n    if (document && document.readyState !== 'complete') {\n      const handler = () => {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler);\n          resolve();\n        }\n      };\n      document.addEventListener('readystatechange', handler);\n    } else {\n      resolve();\n    }\n  });\n}\nfunction changeInitializationStatus() {\n  initializationStatus = 3 /* InitializationStatus.initialized */;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nconst INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nconst DEFAULT_REMAINING_TRIES = 3;\nconst MAX_EVENT_COUNT_PER_REQUEST = 1000;\nlet remainingTries = DEFAULT_REMAINING_TRIES;\n/* eslint-enable camelcase */\nlet queue = [];\nlet isTransportSetup = false;\nfunction setupTransportService() {\n  if (!isTransportSetup) {\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\n    isTransportSetup = true;\n  }\n}\nfunction processQueue(timeOffset) {\n  setTimeout(() => {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    }\n    // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n    dispatchQueueEvents();\n  }, timeOffset);\n}\nfunction dispatchQueueEvents() {\n  // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\n  // The staged events will be used for current logRequest attempt, remaining events will be kept\n  // for next attempt.\n  const staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\n  /* eslint-disable camelcase */\n  // We will pass the JSON serialized event to the backend.\n  const log_event = staged.map(evt => ({\n    source_extension_json_proto3: evt.message,\n    event_time_ms: String(evt.eventTime)\n  }));\n  const data = {\n    request_time_ms: String(Date.now()),\n    client_info: {\n      client_type: 1,\n      js_client_info: {}\n    },\n    log_source: SettingsService.getInstance().logSource,\n    log_event\n  };\n  /* eslint-enable camelcase */\n  sendEventsToFl(data, staged).catch(() => {\n    // If the request fails for some reason, add the events that were attempted\n    // back to the primary queue to retry later.\n    queue = [...staged, ...queue];\n    remainingTries--;\n    consoleLogger.info(`Tries left: ${remainingTries}.`);\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\n  });\n}\nfunction sendEventsToFl(data, staged) {\n  return postToFlEndpoint(data).then(res => {\n    if (!res.ok) {\n      consoleLogger.info('Call to Firebase backend failed.');\n    }\n    return res.json();\n  }).then(res => {\n    // Find the next call wait time from the response.\n    const transportWait = Number(res.nextRequestWaitMillis);\n    let requestOffset = DEFAULT_SEND_INTERVAL_MS;\n    if (!isNaN(transportWait)) {\n      requestOffset = Math.max(transportWait, requestOffset);\n    }\n    // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\n    // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\n    const logResponseDetails = res.logResponseDetails;\n    if (Array.isArray(logResponseDetails) && logResponseDetails.length > 0 && logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\n      queue = [...staged, ...queue];\n      consoleLogger.info(`Retry transport request later.`);\n    }\n    remainingTries = DEFAULT_REMAINING_TRIES;\n    // Schedule the next process.\n    processQueue(requestOffset);\n  });\n}\nfunction postToFlEndpoint(data) {\n  const flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\n  return fetch(flTransportFullUrl, {\n    method: 'POST',\n    body: JSON.stringify(data)\n  });\n}\nfunction addToQueue(evt) {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(\"invalid cc log\" /* ErrorCode.INVALID_CC_LOG */);\n  }\n  // Add the new event to the queue.\n  queue = [...queue, evt];\n}\n/** Log handler for cc service to send the performance logs to the server. */\nfunction transportHandler(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nserializer) {\n  return (...args) => {\n    const message = serializer(...args);\n    addToQueue({\n      message,\n      eventTime: Date.now()\n    });\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/* eslint-enble camelcase */\nlet logger;\n// This method is not called before initialization.\nfunction sendLog(resource, resourceType) {\n  if (!logger) {\n    logger = transportHandler(serializer);\n  }\n  logger(resource, resourceType);\n}\nfunction logTrace(trace) {\n  const settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  }\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  }\n  // Do not log if required apis are not available.\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  }\n  // Only log the page load auto traces if page is visible.\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise(trace.performanceController).then(() => sendTraceLog(trace), () => sendTraceLog(trace));\n  }\n}\nfunction sendTraceLog(trace) {\n  if (!getIid()) {\n    return;\n  }\n  const settingsService = SettingsService.getInstance();\n  if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling) {\n    return;\n  }\n  setTimeout(() => sendLog(trace, 1 /* ResourceType.Trace */), 0);\n}\nfunction logNetworkRequest(networkRequest) {\n  const settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  }\n  // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\n  // Need to blacklist both old and new endpoints to avoid migration gap.\n  const networkRequestUrl = networkRequest.url;\n  // Blacklist old log endpoint and new transport endpoint.\n  // Because Performance SDK doesn't instrument requests sent from SDK itself.\n  const logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\n  const flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\n  if (networkRequestUrl === logEndpointUrl || networkRequestUrl === flEndpointUrl) {\n    return;\n  }\n  if (!settingsService.loggingEnabled || !settingsService.logNetworkAfterSampling) {\n    return;\n  }\n  setTimeout(() => sendLog(networkRequest, 0 /* ResourceType.NetworkRequest */), 0);\n}\nfunction serializer(resource, resourceType) {\n  if (resourceType === 0 /* ResourceType.NetworkRequest */) {\n    return serializeNetworkRequest(resource);\n  }\n  return serializeTrace(resource);\n}\nfunction serializeNetworkRequest(networkRequest) {\n  const networkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  const perfMetric = {\n    application_info: getApplicationInfo(networkRequest.performanceController.app),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\nfunction serializeTrace(trace) {\n  const traceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = trace.counters;\n  }\n  const customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = customAttributes;\n  }\n  const perfMetric = {\n    application_info: getApplicationInfo(trace.performanceController.app),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\nfunction getApplicationInfo(firebaseApp) {\n  return {\n    google_app_id: getAppId(firebaseApp),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst MAX_METRIC_NAME_LENGTH = 100;\nconst RESERVED_AUTO_PREFIX = '_';\nconst oobMetrics = [FIRST_PAINT_COUNTER_NAME, FIRST_CONTENTFUL_PAINT_COUNTER_NAME, FIRST_INPUT_DELAY_COUNTER_NAME];\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\nfunction isValidMetricName(name, traceName) {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n  return traceName && traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) && oobMetrics.indexOf(name) > -1 || !name.startsWith(RESERVED_AUTO_PREFIX);\n}\n/**\r\n * Converts the provided value to an integer value to be used in case of a metric.\r\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\r\n *\r\n * @returns Converted integer number to be set for the metric.\r\n */\nfunction convertMetricValueToInteger(providedValue) {\n  const valueAsInteger = Math.floor(providedValue);\n  if (valueAsInteger < providedValue) {\n    consoleLogger.info(`Metric value should be an Integer, setting the value as : ${valueAsInteger}.`);\n  }\n  return valueAsInteger;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nclass Trace {\n  /**\r\n   * @param performanceController The performance controller running.\r\n   * @param name The name of the trace.\r\n   * @param isAuto If the trace is auto-instrumented.\r\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n   * is only set when the trace is built for logging when the user directly uses the user timing\r\n   * api (performance.mark and performance.measure).\r\n   */\n  constructor(performanceController, name, isAuto = false, traceMeasureName) {\n    this.performanceController = performanceController;\n    this.name = name;\n    this.isAuto = isAuto;\n    this.state = 1 /* TraceState.UNINITIALIZED */;\n    this.customAttributes = {};\n    this.counters = {};\n    this.api = Api.getInstance();\n    this.randomId = Math.floor(Math.random() * 1000000);\n    if (!this.isAuto) {\n      this.traceStartMark = `${TRACE_START_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceStopMark = `${TRACE_STOP_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceMeasure = traceMeasureName || `${TRACE_MEASURE_PREFIX}-${this.randomId}-${this.name}`;\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n  /**\r\n   * Starts a trace. The measurement of the duration starts at this point.\r\n   */\n  start() {\n    if (this.state !== 1 /* TraceState.UNINITIALIZED */) {\n      throw ERROR_FACTORY.create(\"trace started\" /* ErrorCode.TRACE_STARTED_BEFORE */, {\n        traceName: this.name\n      });\n    }\n    this.api.mark(this.traceStartMark);\n    this.state = 2 /* TraceState.RUNNING */;\n  }\n  /**\r\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n   * is logged.\r\n   */\n  stop() {\n    if (this.state !== 2 /* TraceState.RUNNING */) {\n      throw ERROR_FACTORY.create(\"trace stopped\" /* ErrorCode.TRACE_STOPPED_BEFORE */, {\n        traceName: this.name\n      });\n    }\n    this.state = 3 /* TraceState.TERMINATED */;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\n    this.calculateTraceMetrics();\n    logTrace(this);\n  }\n  /**\r\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n   * directly. No need to use start and stop methods.\r\n   * @param startTime Trace start time since epoch in millisec\r\n   * @param duration The duraction of the trace in millisec\r\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n   */\n  record(startTime, duration, options) {\n    if (startTime <= 0) {\n      throw ERROR_FACTORY.create(\"nonpositive trace startTime\" /* ErrorCode.NONPOSITIVE_TRACE_START_TIME */, {\n        traceName: this.name\n      });\n    }\n    if (duration <= 0) {\n      throw ERROR_FACTORY.create(\"nonpositive trace duration\" /* ErrorCode.NONPOSITIVE_TRACE_DURATION */, {\n        traceName: this.name\n      });\n    }\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = Object.assign({}, options.attributes);\n    }\n    if (options && options.metrics) {\n      for (const metricName of Object.keys(options.metrics)) {\n        if (!isNaN(Number(options.metrics[metricName]))) {\n          this.counters[metricName] = Math.floor(Number(options.metrics[metricName]));\n        }\n      }\n    }\n    logTrace(this);\n  }\n  /**\r\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n   * custom metric if one with the given name does not exist. The value will be floored down to an\r\n   * integer.\r\n   * @param counter Name of the custom metric\r\n   * @param numAsInteger Increment by value\r\n   */\n  incrementMetric(counter, numAsInteger = 1) {\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, numAsInteger);\n    } else {\n      this.putMetric(counter, this.counters[counter] + numAsInteger);\n    }\n  }\n  /**\r\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n   * given name does not exist. The value will be floored down to an integer.\r\n   * @param counter Name of the custom metric\r\n   * @param numAsInteger Set custom metric to this value\r\n   */\n  putMetric(counter, numAsInteger) {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = convertMetricValueToInteger(numAsInteger !== null && numAsInteger !== void 0 ? numAsInteger : 0);\n    } else {\n      throw ERROR_FACTORY.create(\"invalid custom metric name\" /* ErrorCode.INVALID_CUSTOM_METRIC_NAME */, {\n        customMetricName: counter\n      });\n    }\n  }\n  /**\r\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n   * not exist will return zero.\r\n   * @param counter\r\n   */\n  getMetric(counter) {\n    return this.counters[counter] || 0;\n  }\n  /**\r\n   * Sets a custom attribute of a trace to a certain value.\r\n   * @param attr\r\n   * @param value\r\n   */\n  putAttribute(attr, value) {\n    const isValidName = isValidCustomAttributeName(attr);\n    const isValidValue = isValidCustomAttributeValue(value);\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    }\n    // Throw appropriate error when the attribute name or value is invalid.\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(\"invalid attribute name\" /* ErrorCode.INVALID_ATTRIBUTE_NAME */, {\n        attributeName: attr\n      });\n    }\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(\"invalid attribute value\" /* ErrorCode.INVALID_ATTRIBUTE_VALUE */, {\n        attributeValue: value\n      });\n    }\n  }\n  /**\r\n   * Retrieves the value a custom attribute of a trace is set to.\r\n   * @param attr\r\n   */\n  getAttribute(attr) {\n    return this.customAttributes[attr];\n  }\n  removeAttribute(attr) {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n    delete this.customAttributes[attr];\n  }\n  getAttributes() {\n    return Object.assign({}, this.customAttributes);\n  }\n  setStartTime(startTime) {\n    this.startTimeUs = startTime;\n  }\n  setDuration(duration) {\n    this.durationUs = duration;\n  }\n  /**\r\n   * Calculates and assigns the duration and start time of the trace using the measure performance\r\n   * entry.\r\n   */\n  calculateTraceMetrics() {\n    const perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    const perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\n    }\n  }\n  /**\r\n   * @param navigationTimings A single element array which contains the navigationTIming object of\r\n   * the page load\r\n   * @param paintTimings A array which contains paintTiming object of the page load\r\n   * @param firstInputDelay First input delay in millisec\r\n   */\n  static createOobTrace(performanceController, navigationTimings, paintTimings, firstInputDelay) {\n    const route = Api.getInstance().getUrl();\n    if (!route) {\n      return;\n    }\n    const trace = new Trace(performanceController, OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    const timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\n      trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\n      trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\n    }\n    const FIRST_PAINT = 'first-paint';\n    const FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      const firstPaint = paintTimings.find(paintObject => paintObject.name === FIRST_PAINT);\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\n      }\n      const firstContentfulPaint = paintTimings.find(paintObject => paintObject.name === FIRST_CONTENTFUL_PAINT);\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\n      }\n      if (firstInputDelay) {\n        trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\n      }\n    }\n    logTrace(trace);\n  }\n  static createUserTimingTrace(performanceController, measureName) {\n    const trace = new Trace(performanceController, measureName, false, measureName);\n    logTrace(trace);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction createNetworkRequestEntry(performanceController, entry) {\n  const performanceEntry = entry;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n  const timeOrigin = Api.getInstance().getTimeOrigin();\n  const startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\n  const timeToResponseInitiatedUs = performanceEntry.responseStart ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000) : undefined;\n  const timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\n  // Remove the query params from logged network request url.\n  const url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  const networkRequest = {\n    performanceController,\n    url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs,\n    timeToResponseInitiatedUs,\n    timeToResponseCompletedUs\n  };\n  logNetworkRequest(networkRequest);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst FID_WAIT_TIME_MS = 5000;\nfunction setupOobResources(performanceController) {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  }\n  // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n  setTimeout(() => setupOobTraces(performanceController), 0);\n  setTimeout(() => setupNetworkRequests(performanceController), 0);\n  setTimeout(() => setupUserTimingTraces(performanceController), 0);\n}\nfunction setupNetworkRequests(performanceController) {\n  const api = Api.getInstance();\n  const resources = api.getEntriesByType('resource');\n  for (const resource of resources) {\n    createNetworkRequestEntry(performanceController, resource);\n  }\n  api.setupObserver('resource', entry => createNetworkRequestEntry(performanceController, entry));\n}\nfunction setupOobTraces(performanceController) {\n  const api = Api.getInstance();\n  const navigationTimings = api.getEntriesByType('navigation');\n  const paintTimings = api.getEntriesByType('paint');\n  // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let timeoutId = setTimeout(() => {\n      Trace.createOobTrace(performanceController, navigationTimings, paintTimings);\n      timeoutId = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay(fid => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        Trace.createOobTrace(performanceController, navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(performanceController, navigationTimings, paintTimings);\n  }\n}\nfunction setupUserTimingTraces(performanceController) {\n  const api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  const measures = api.getEntriesByType('measure');\n  for (const measure of measures) {\n    createUserTimingTrace(performanceController, measure);\n  }\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', entry => createUserTimingTrace(performanceController, entry));\n}\nfunction createUserTimingTrace(performanceController, measure) {\n  const measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n  if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) === TRACE_MEASURE_PREFIX) {\n    return;\n  }\n  Trace.createUserTimingTrace(performanceController, measureName);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nclass PerformanceController {\n  constructor(app, installations) {\n    this.app = app;\n    this.installations = installations;\n    this.initialized = false;\n  }\n  /**\r\n   * This method *must* be called internally as part of creating a\r\n   * PerformanceController instance.\r\n   *\r\n   * Currently it's not possible to pass the settings object through the\r\n   * constructor using Components, so this method exists to be called with the\r\n   * desired settings, to ensure nothing is collected without the user's\r\n   * consent.\r\n   */\n  _init(settings) {\n    if (this.initialized) {\n      return;\n    }\n    if ((settings === null || settings === void 0 ? void 0 : settings.dataCollectionEnabled) !== undefined) {\n      this.dataCollectionEnabled = settings.dataCollectionEnabled;\n    }\n    if ((settings === null || settings === void 0 ? void 0 : settings.instrumentationEnabled) !== undefined) {\n      this.instrumentationEnabled = settings.instrumentationEnabled;\n    }\n    if (Api.getInstance().requiredApisAvailable()) {\n      validateIndexedDBOpenable().then(isAvailable => {\n        if (isAvailable) {\n          setupTransportService();\n          getInitializationPromise(this).then(() => setupOobResources(this), () => setupOobResources(this));\n          this.initialized = true;\n        }\n      }).catch(error => {\n        consoleLogger.info(`Environment doesn't support IndexedDB: ${error}`);\n      });\n    } else {\n      consoleLogger.info('Firebase Performance cannot start if the browser does not support ' + '\"Fetch\" and \"Promise\", or cookies are disabled.');\n    }\n  }\n  set instrumentationEnabled(val) {\n    SettingsService.getInstance().instrumentationEnabled = val;\n  }\n  get instrumentationEnabled() {\n    return SettingsService.getInstance().instrumentationEnabled;\n  }\n  set dataCollectionEnabled(val) {\n    SettingsService.getInstance().dataCollectionEnabled = val;\n  }\n  get dataCollectionEnabled() {\n    return SettingsService.getInstance().dataCollectionEnabled;\n  }\n}\n\n/**\r\n * Firebase Performance Monitoring\r\n *\r\n * @packageDocumentation\r\n */\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n/**\r\n * Returns a {@link FirebasePerformance} instance for the given app.\r\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\r\n * @public\r\n */\nfunction getPerformance(app = getApp()) {\n  app = getModularInstance(app);\n  const provider = _getProvider(app, 'performance');\n  const perfInstance = provider.getImmediate();\n  return perfInstance;\n}\n/**\r\n * Returns a {@link FirebasePerformance} instance for the given app. Can only be called once.\r\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\r\n * @param settings - Optional settings for the {@link FirebasePerformance} instance.\r\n * @public\r\n */\nfunction initializePerformance(app, settings) {\n  app = getModularInstance(app);\n  const provider = _getProvider(app, 'performance');\n  // throw if an instance was already created.\n  // It could happen if initializePerformance() is called more than once, or getPerformance() is called first.\n  if (provider.isInitialized()) {\n    const existingInstance = provider.getImmediate();\n    const initialSettings = provider.getOptions();\n    if (deepEqual(initialSettings, settings !== null && settings !== void 0 ? settings : {})) {\n      return existingInstance;\n    } else {\n      throw ERROR_FACTORY.create(\"already initialized\" /* ErrorCode.ALREADY_INITIALIZED */);\n    }\n  }\n\n  const perfInstance = provider.initialize({\n    options: settings\n  });\n  return perfInstance;\n}\n/**\r\n * Returns a new `PerformanceTrace` instance.\r\n * @param performance - The {@link FirebasePerformance} instance to use.\r\n * @param name - The name of the trace.\r\n * @public\r\n */\nfunction trace(performance, name) {\n  performance = getModularInstance(performance);\n  return new Trace(performance, name);\n}\nconst factory = (container, {\n  options: settings\n}) => {\n  // Dependencies\n  const app = container.getProvider('app').getImmediate();\n  const installations = container.getProvider('installations-internal').getImmediate();\n  if (app.name !== DEFAULT_ENTRY_NAME) {\n    throw ERROR_FACTORY.create(\"FB not default\" /* ErrorCode.FB_NOT_DEFAULT */);\n  }\n\n  if (typeof window === 'undefined') {\n    throw ERROR_FACTORY.create(\"no window\" /* ErrorCode.NO_WINDOW */);\n  }\n\n  setupApi(window);\n  const perfInstance = new PerformanceController(app, installations);\n  perfInstance._init(settings);\n  return perfInstance;\n};\nfunction registerPerformance() {\n  _registerComponent(new Component('performance', factory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, 'esm2017');\n}\nregisterPerformance();\nexport { getPerformance, initializePerformance, trace };\n"],"mappings":"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","names":["stringToByteArray$1","str","out","p","i","c","byteArrayToString","bytes","pos","c1","c2","c3","c4","u","base64","input","webSafe","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","charToByteMap","byte4","DecodeBase64StringError","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","base64Decode","getGlobal","getDefaultsFromGlobal","getDefaultsFromEnvVariable","defaultsJsonString","getDefaultsFromCookie","match","decoded","base64Decode","getDefaults","e","getDefaultEmulatorHost","productName","_a","_b","getDefaultEmulatorHostnameAndPort","host","separatorIndex","port","getDefaultAppConfig","getExperimentalSetting","name","Deferred","resolve","reject","callback","error","value","createMockUserToken","token","projectId","header","project","iat","sub","payload","signature","base64urlEncodeWithoutPadding","getUA","isMobileCordova","isBrowserExtension","runtime","isReactNative","isIE","ua","getUA","isIndexedDBAvailable","validateIndexedDBOpenable","resolve","reject","preExist","DB_CHECK_NAME","request","_a","error","areCookiesEnabled","ERROR_NAME","FirebaseError","_FirebaseError","code","message","customData","ErrorFactory","service","serviceName","errors","data","fullCode","template","replaceTemplate","fullMessage","PATTERN","_","key","value","isEmpty","obj","key","deepEqual","a","b","aKeys","bKeys","k","aProp","bProp","isObject","thing","querystring","querystringParams","params","key","value","arrayVal","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","e","value","observer","error","nextOrObserver","complete","implementsAnyMethods","noop","unsub","i","fn","err","implementsAnyMethods","obj","methods","method","noop","DEFAULT_INTERVAL_MILLIS","DEFAULT_BACKOFF_FACTOR","MAX_VALUE_MILLIS","RANDOM_FACTOR","calculateBackoffMillis","backoffCount","intervalMillis","backoffFactor","currBaseValue","randomWait","getModularInstance","service","instances","LogLevel","levelStringToEnum","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","args","now","method","Logger","name","val","Component","name","instanceFactory","type","mode","multipleInstances","props","callback","DEFAULT_ENTRY_NAME","Provider","container","identifier","normalizedIdentifier","deferred","Deferred","instance","options","_a","optional","e","component","isComponentEager","instanceIdentifier","instanceDeferred","__async","services","service","opts","normalizedDeferredIdentifier","existingCallbacks","existingInstance","callbacks","normalizeIdentifierForFactory","ComponentContainer","provider","instanceOfAny","object","constructors","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","getCursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","resolve","reject","unlisten","success","error","wrap","value","cacheDonePromiseForTransaction","tx","done","complete","idbProxyTraps","target","prop","receiver","replaceTraps","callback","wrapFunction","func","storeNames","args","unwrap","transformCachableValue","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","request","openPromise","wrap","event","db","deleteDB","readMethods","writeMethods","cachedMethods","getMethod","target","prop","targetFuncName","useIndex","isWrite","method","storeName","args","__async","tx","replaceTraps","oldTraps","__spreadProps","__spreadValues","receiver","PlatformLoggerServiceImpl","container","provider","isVersionServiceProvider","service","logString","component","name$o","version$1","logger","Logger","name$n","name$m","name$l","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","name","version","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","_components","_addComponent","app","e","_registerComponent","component","componentName","_components","logger","app","_apps","_addComponent","_getProvider","name","heartbeatController","ERRORS","ERROR_FACTORY","ErrorFactory","FirebaseAppImpl","options","config","container","Component","val","SDK_VERSION","version","initializeApp","_options","rawConfig","DEFAULT_ENTRY_NAME","name","getDefaultAppConfig","existingApp","_apps","deepEqual","ComponentContainer","component","_components","newApp","getApp","app","getApps","registerVersion","libraryKeyOrName","version","variant","_a","library","PLATFORM_LOG_STRING","libraryMismatch","versionMismatch","warning","logger","_registerComponent","Component","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","openDB","db","oldVersion","e","ERROR_FACTORY","readHeartbeatsFromIndexedDB","app","__async","computeKey","FirebaseError","logger","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","tx","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","container","HeartbeatStorageImpl","result","_a","_b","agent","date","getUTCDateString","singleDateHeartbeat","hbTimestamp","heartbeatsToSend","unsentEntries","extractHeartbeatsForHeader","headerString","base64urlEncodeWithoutPadding","heartbeatsCache","maxSize","heartbeatEntry","hb","countBytes","isIndexedDBAvailable","validateIndexedDBOpenable","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","registerCoreComponents","variant","_registerComponent","Component","PlatformLoggerServiceImpl","registerVersion","name$o","version$1","instanceOfAny","object","constructors","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","getCursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","resolve","reject","unlisten","success","error","wrap","value","cacheDonePromiseForTransaction","tx","done","complete","idbProxyTraps","target","prop","receiver","replaceTraps","callback","wrapFunction","func","storeNames","args","unwrap","transformCachableValue","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","request","openPromise","wrap","event","db","readMethods","writeMethods","cachedMethods","getMethod","target","prop","targetFuncName","useIndex","isWrite","method","storeName","args","__async","tx","replaceTraps","oldTraps","__spreadProps","__spreadValues","receiver","name","version","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","SERVICE","SERVICE_NAME","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","isServerError","error","FirebaseError","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","getExpiresInFromResponseExpiresIn","getErrorFromResponse","requestName","__async","errorData","getHeaders","apiKey","getHeadersWithAuth","appConfig","refreshToken","headers","getAuthorizationHeader","retryIfServerError","fn","result","responseExpiresIn","createInstallationRequest","_0","_1","heartbeatServiceProvider","fid","endpoint","heartbeatService","heartbeatsHeader","body","request","responseValue","sleep","ms","resolve","bufferToBase64UrlSafe","array","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","encode","getKey","fidChangeCallbacks","fidChanged","key","callFidChangeCallbacks","broadcastFidChange","callFidChangeCallbacks","key","fid","callbacks","fidChangeCallbacks","callback","broadcastFidChange","channel","getBroadcastChannel","closeBroadcastChannel","broadcastChannel","e","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","openDB","db","oldVersion","set","appConfig","value","__async","getKey","tx","objectStore","oldValue","fidChanged","remove","update","updateFn","store","newValue","getInstallationEntry","installations","registrationPromise","installationEntry","oldEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","INVALID_FID","entry","generateFid","clearTimedOutRequest","registrationPromiseWithError","ERROR_FACTORY","inProgressEntry","registerInstallation","waitUntilFidRegistration","registeredInstallationEntry","createInstallationRequest","isServerError","updateInstallationRequest","sleep","hasInstallationRequestTimedOut","PENDING_TIMEOUT_MS","generateAuthTokenRequest","_0","_1","heartbeatServiceProvider","endpoint","getGenerateAuthTokenEndpoint","headers","getHeadersWithAuth","heartbeatService","heartbeatsHeader","body","PACKAGE_VERSION","request","response","retryIfServerError","responseValue","extractAuthTokenInfoFromResponse","getErrorFromResponse","getInstallationsEndpoint","refreshAuthToken","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenValid","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","updateAuthTokenRequest","authToken","hasAuthTokenRequestTimedOut","updatedInstallationEntry","isAuthTokenExpired","now","TOKEN_EXPIRATION_BUFFER","inProgressAuthToken","getId","installationsImpl","getToken","completeInstallationRegistration","extractAppConfig","app","getMissingValueError","configKeys","keyName","valueName","ERROR_FACTORY","INSTALLATIONS_NAME","INSTALLATIONS_NAME_INTERNAL","publicFactory","container","appConfig","heartbeatServiceProvider","_getProvider","internalFactory","installations","getId","forceRefresh","getToken","registerInstallations","_registerComponent","Component","registerVersion","name","version","name","version","SDK_VERSION","TRACE_START_MARK_PREFIX","TRACE_STOP_MARK_PREFIX","TRACE_MEASURE_PREFIX","OOB_TRACE_PAGE_LOAD_PREFIX","FIRST_PAINT_COUNTER_NAME","FIRST_CONTENTFUL_PAINT_COUNTER_NAME","FIRST_INPUT_DELAY_COUNTER_NAME","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE","SERVICE_NAME","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","consoleLogger","Logger","LogLevel","apiInstance","windowInstance","Api","_Api","window","measureName","mark1","mark2","type","areCookiesEnabled","isIndexedDBAvailable","entryType","callback","list","entry","setupApi","iid","getIidPromise","installationsService","iidPromise","iidVal","getIid","getAuthTokenPromise","authTokenPromise","authTokenVal","mergeStrings","part1","part2","sizeDiff","resultArray","settingsServiceInstance","SettingsService","_SettingsService","VisibilityState","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","MAX_ATTRIBUTE_NAME_LENGTH","MAX_ATTRIBUTE_VALUE_LENGTH","getServiceWorkerStatus","navigator","getVisibilityState","getEffectiveConnectionType","navigatorConnection","isValidCustomAttributeName","prefix","isValidCustomAttributeValue","value","getAppId","firebaseApp","_a","appId","getProjectId","projectId","getApiKey","apiKey","REMOTE_CONFIG_SDK_VERSION","DEFAULT_CONFIGS","FIS_AUTH_PREFIX","getConfig","performanceController","config","getStoredConfig","processConfig","getRemoteConfig","storeConfig","localStorage","expiryString","configValid","configStringified","COULD_NOT_GET_CONFIG_MSG","authToken","configEndPoint","request","response","entries","shouldLogAfterSampling","expiry","samplingRate","initializationStatus","initializationPromise","getInitializationPromise","initializePerf","isPerfInitialized","getDocumentReadyComplete","changeInitializationStatus","document","resolve","handler","DEFAULT_SEND_INTERVAL_MS","INITIAL_SEND_TIME_DELAY_MS","DEFAULT_REMAINING_TRIES","MAX_EVENT_COUNT_PER_REQUEST","remainingTries","queue","isTransportSetup","setupTransportService","processQueue","timeOffset","dispatchQueueEvents","staged","log_event","evt","data","sendEventsToFl","postToFlEndpoint","res","transportWait","requestOffset","logResponseDetails","flTransportFullUrl","addToQueue","transportHandler","serializer","args","message","logger","sendLog","resource","resourceType","logTrace","trace","settingsService","sendTraceLog","logNetworkRequest","networkRequest","networkRequestUrl","logEndpointUrl","flEndpointUrl","serializeNetworkRequest","serializeTrace","networkRequestMetric","perfMetric","getApplicationInfo","traceMetric","customAttributes","MAX_METRIC_NAME_LENGTH","RESERVED_AUTO_PREFIX","oobMetrics","isValidMetricName","traceName","convertMetricValueToInteger","providedValue","valueAsInteger","Trace","_Trace","isAuto","traceMeasureName","startTime","duration","options","metricName","counter","numAsInteger","attr","isValidName","isValidValue","perfMeasureEntries","perfMeasureEntry","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","FIRST_PAINT","FIRST_CONTENTFUL_PAINT","firstPaint","paintObject","firstContentfulPaint","createNetworkRequestEntry","performanceEntry","timeOrigin","startTimeUs","timeToResponseInitiatedUs","timeToResponseCompletedUs","url","FID_WAIT_TIME_MS","setupOobResources","setupOobTraces","setupNetworkRequests","setupUserTimingTraces","api","resources","timeoutId","fid","measures","measure","createUserTimingTrace","PerformanceController","app","installations","settings","validateIndexedDBOpenable","isAvailable","error","val","DEFAULT_ENTRY_NAME","getPerformance","getApp","getModularInstance","_getProvider","initializePerformance","provider","existingInstance","initialSettings","deepEqual","performance","factory","container","perfInstance","registerPerformance","_registerComponent","Component","registerVersion"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}